---
type Props = {
  name: string;
  role: string;
  company: string;
  avatar?: string;
  content: string;
  linkedinUrl?: string;
};

const { name, role, company, avatar, content, linkedinUrl } = Astro.props;
---

<div class="flex-shrink-0 w-80 p-6 bg-white dark:bg-neutral-800 rounded-lg shadow-md border border-neutral-200 dark:border-neutral-700">
  <div class="flex items-start gap-4">
    <div class="flex-shrink-0">
      {avatar ? (
        <img 
          src={avatar} 
          alt={`${name} avatar`}
          class="w-12 h-12 rounded-full object-cover border-2 border-neutral-200 dark:border-neutral-600"
          loading="lazy"
          onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
        />
      ) : null}
      <div 
        class={`w-12 h-12 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white font-semibold text-lg ${avatar ? 'hidden' : ''}`}
      >
        {name.charAt(0)}
      </div>
    </div>
    <div class="flex-1">
      <div class="mb-3">
        {linkedinUrl ? (
          <a 
            href={linkedinUrl}
            target="_blank"
            rel="noopener noreferrer"
            class="font-semibold text-neutral-900 dark:text-neutral-100 hover:text-blue-600 dark:hover:text-blue-400 transition-colors duration-200"
          >
            {name}
          </a>
        ) : (
          <h4 class="font-semibold text-neutral-900 dark:text-neutral-100">{name}</h4>
        )}
        <p class="text-sm text-neutral-600 dark:text-neutral-400">{role} at {company}</p>
      </div>
      <blockquote class="text-neutral-700 dark:text-neutral-300 text-sm leading-relaxed whitespace-pre-line">
        "{content}"
      </blockquote>
    </div>
  </div>
</div>